apiVersion: v1
kind: Service
metadata:
  name: {{ include "enroute.fullname" . }}
  labels:
    {{- include "enroute.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.awsSettings.enable -}}
    # This annotation puts the AWS ELB into "TCP" mode so that it does not
    # do HTTP negotiation for HTTPS connections at the ELB edge.
    # The downside of this is the remote IP address of all connections will
    # appear to be the internal address of the ELB. See docs/proxy-proto.md
    # for information about enabling the PROXY protocol on the ELB to recover
    # the original remote IP address.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
    {{- end }}

    {{- if .Values.ociSettings.enable }}
    service.beta.kubernetes.io/oci-load-balancer-backend-protocol: TCP
    service.beta.kubernetes.io/oci-load-balancer-ssl-ports: "443"
    #service.beta.kubernetes.io/oci-load-balancer-tls-secret: ssl-certificate-secret
    {{- end }}

    {{- if .Values.digitaloceanSettings.enable }}
    service.beta.kubernetes.io/do-loadbalancer-protocol: TCP
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: true
    service.beta.kubernetes.io/do-loadbalancer-size-slug: lb-medium
    service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: true
    {{- end }}

    # Scrape metrics for the enroute container
    # The envoy container is scraped by annotations on the pod spec
    prometheus.io/port: "8000"
    prometheus.io/scrape: "true"
spec:
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 8080
    - port: 443
      name: https
      protocol: TCP
      targetPort: 8443
  selector:
    {{- include "enroute.selectorLabels" . | nindent 4 }}
  externalTrafficPolicy: Local
  type: LoadBalancer
